// Сетка
.contentGutter(@gutter) {
	margin-left: -@gutter / 2;
	margin-right: -@gutter / 2;
}
.containerGutter(@gutter) {
	padding-left: @gutter / 2;
	padding-right: @gutter / 2;
}

.container {
	.container {
		width: 100%;
	}

	@media (max-width: @screenTablet) {
		.containerGutter(@gutterWidthMobile);
	}
	@media (min-width: @screenTablet) and (max-width: @screenTabletMax) {
		.containerGutter(@gutterWidth);
	}
	@media (min-width: @screenDesktop) and (max-width: @screenDesktopMax) {
		.containerGutter(@gutterWidthDesktop);
	}
	@media (min-width: @screenLarge) {
		.containerGutter(@gutterWidthLargeDesktop);
	}
}
.content {
	margin: 0 auto;
	.box-sizing;
	.flex-display;
	.flex-direction(row);
	.flex-wrap(wrap);

	@media (min-width: @screenTablet) {
		max-width: @screenTablet - (@gutterWidth * 2);
	}
	@media (min-width: @screenDesktop) {
		max-width: @screenDesktop  - (@gutterWidth * 2);
	}
	@media (min-width: @screenLarge) {
		max-width: @screenLarge  - (@gutterWidth * 2);
	}


	.content {
		@media (max-width: @screenTablet) {
			.contentGutter(@gutterWidthMobile);
		}
		@media (min-width: @screenTablet) and (max-width: @screenTabletMax) {
			.contentGutter(@gutterWidth);
		}
		@media (min-width: @screenDesktop) and (max-width: @screenDesktopMax) {
			.contentGutter(@gutterWidthDesktop);
		}
		@media (min-width: @screenLarge) {
			.contentGutter(@gutterWidthLargeDesktop);
		}	
	}
}


.content.reverse {
	.content-reverse();
}
.col.reverse {
	.col-reverse();
}

.col {
	.box-sizing;
	.flex(~"0 0 auto");
	.flex-direction('column');
}
.make-position-class(~"-all-");

@media (max-width: @screenTablet) {
	.make-position-class(~"-mb-");
}
@media (min-width: @screenTablet) and (max-width: @screenTabletMax) {
	.make-position-class(~"-");
}
@media (min-width: @screenDesktop) and (max-width: @screenDesktopMax) {
	.make-position-class(~"-dt-");
}
@media (min-width: @screenLarge) {
	.make-position-class(~"-ld-");
}	
.makeColPadding(@gutterWidthMobile);
.makegrid(-mb-);


.for-each(@col-breaks);
.-each(@breakpoint) {
  @media only screen and (min-width: @breakpoint) {
    .makeColPadding(extract(@col-padding, @i));
    .makegrid(extract(@col-names, @i));
  }
}

.center-block {
	margin: 0 auto;
}


// Вспомогательные классы для показа/скрытия элементов на определённых экранах
@media (max-width: @screenPhoneMax) {
	.col-mb-hide,
	.mb-hide,
	.tablet-block,
	.col-block,
	.dt-block,
	.col-dt-block,
	.ld-block,
	.col-ld-block {display: none;}
	// .mb-block, 
	// .col-mb-block {display: block;}
}

@media (min-width: @screenTablet) and (max-width: @screenTabletMax) {
	.col-hide,
	.tablet-hide,
	.mb-block,
	.col-mb-block,
	.dt-block,
	.col-dt-block,
	.ld-block, 
	.col-ld-block {display: none;} 
	// .tablet-block, 
	// .col-block  {display: block;}
}

@media (min-width: @screenDesktop) and (max-width: @screenDesktopMax) {
	.col-dt-hide, 
	.dt-hide, 
	.mb-block, 
	.col-mb-block, 
	.tablet-block, 
	.col-block, 
	.ld-block,
	.col-ld-block {display: none;}
	// .dt-block, 
	// .col-dt-block {display: block;}
}

@media (min-width: @screenLarge) {
	.col-ld-hide, 
	.ld-hide, 
	.mb-block,
	.col-mb-block,
	.tablet-block,
	.col-block,
	.dt-block,
	.col-dt-block {display: none;}
	// .ld-block, 
	// .col-ld-block {display: block;}
}

// Вспомогательные классы для добавления отступов снизу и сверху к колонкам в соответсвии с настройками отступов между колонками
// Полезно, когда требуется ровный "зазор" между блоками со всех сторон и на всех устройствах.

.col-padding {
	@media (max-width: @screenTablet) {
		padding-top: @gutterWidthMobile;
		padding-bottom: @gutterWidthMobile;
	}
	@media (min-width: @screenTablet) and (max-width: @screenTabletMax) {
		padding-top: @gutterWidth;
		padding-bottom: @gutterWidth;
	}
	@media (min-width: @screenDesktop) and (max-width: @screenDesktopMax) {
		padding-top: @gutterWidthDesktop;
		padding-bottom: @gutterWidthDesktop;
	}
	@media (min-width: @screenLarge) {
		padding-top: @gutterWidthLargeDesktop;
		padding-bottom: @gutterWidthLargeDesktop;
	}
}

.col-padding-top {
	@media (max-width: @screenTablet) {
		padding-top: @gutterWidthMobile;
	}
	@media (min-width: @screenTablet) and (max-width: @screenTabletMax) {
		padding-top: @gutterWidth;
	}
	@media (min-width: @screenDesktop) and (max-width: @screenDesktopMax) {
		padding-top: @gutterWidthDesktop;
	}
	@media (min-width: @screenLarge) {
		padding-top: @gutterWidthLargeDesktop;
	}
}

.col-padding-bottom {
	@media (max-width: @screenTablet) {
		padding-bottom: @gutterWidthMobile;
	}
	@media (min-width: @screenTablet) and (max-width: @screenTabletMax) {
		padding-bottom: @gutterWidth;
	}
	@media (min-width: @screenDesktop) and (max-width: @screenDesktopMax) {
		padding-bottom: @gutterWidthDesktop;
	}
	@media (min-width: @screenLarge) {
		padding-bottom: @gutterWidthLargeDesktop;
	}
}

.col-margin {
	@media (max-width: @screenTablet) {
		margin-top: @gutterWidthMobile;
		margin-bottom: @gutterWidthMobile;
	}
	@media (min-width: @screenTablet) and (max-width: @screenTabletMax) {
		margin-top: @gutterWidth;
		margin-bottom: @gutterWidth;
	}
	@media (min-width: @screenDesktop) and (max-width: @screenDesktopMax) {
		margin-top: @gutterWidthDesktop;
		margin-bottom: @gutterWidthDesktop;
	}
	@media (min-width: @screenLarge) {
		margin-top: @gutterWidthLargeDesktop;
		margin-bottom: @gutterWidthLargeDesktop;
	}
}
.col-margin-bottom {
	@media (max-width: @screenTablet) {
		margin-bottom: @gutterWidthMobile;
	}
	@media (min-width: @screenTablet) and (max-width: @screenTabletMax) {
		margin-bottom: @gutterWidth;
	}
	@media (min-width: @screenDesktop) and (max-width: @screenDesktopMax) {
		margin-bottom: @gutterWidthDesktop;
	}
	@media (min-width: @screenLarge) {
		margin-bottom: @gutterWidthLargeDesktop;
	}
}
.col-margin-top {
	@media (max-width: @screenTablet) {
		margin-top: @gutterWidthMobile;
	}
	@media (min-width: @screenTablet) and (max-width: @screenTabletMax) {
		margin-top: @gutterWidth;
	}
	@media (min-width: @screenDesktop) and (max-width: @screenDesktopMax) {
		margin-top: @gutterWidthDesktop;
	}
	@media (min-width: @screenLarge) {
		margin-top: @gutterWidthLargeDesktop;
	}
}